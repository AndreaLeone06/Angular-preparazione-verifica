{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  searchProduct(query) {\n    const searchUrl = `https://world.openfoodfacts.org/cgi/search.pl?search_terms=${query}&page_size=5&json=true`;\n    return this.httpClient.get(searchUrl);\n  }\n  fetchProduct(id) {\n    const productUrl = `https://world.openfoodfacts.org/api/v0/product/${id}`;\n    return this.httpClient.get(productUrl);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProductService","constructor","httpClient","searchProduct","query","searchUrl","get","fetchProduct","id","productUrl","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/workspace/Angular-preparazione-verifica/openfoodfacts/src/app/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  constructor(private httpClient: HttpClient) {}\n\n  searchProduct(query: string) {\n    const searchUrl = `https://world.openfoodfacts.org/cgi/search.pl?search_terms=${query}&page_size=5&json=true`;\n    return this.httpClient.get(searchUrl);\n  }\n\n  fetchProduct(id: string) {\n    const productUrl = `https://world.openfoodfacts.org/api/v0/product/${id}`;\n    return this.httpClient.get(productUrl);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAE7CC,aAAaA,CAACC,KAAa;IACzB,MAAMC,SAAS,GAAG,8DAA8DD,KAAK,wBAAwB;IAC7G,OAAO,IAAI,CAACF,UAAU,CAACI,GAAG,CAACD,SAAS,CAAC;EACvC;EAEAE,YAAYA,CAACC,EAAU;IACrB,MAAMC,UAAU,GAAG,kDAAkDD,EAAE,EAAE;IACzE,OAAO,IAAI,CAACN,UAAU,CAACI,GAAG,CAACG,UAAU,CAAC;EACxC;EAAC,QAAAC,CAAA,G;qBAXUV,cAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdf,cAAc;IAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}