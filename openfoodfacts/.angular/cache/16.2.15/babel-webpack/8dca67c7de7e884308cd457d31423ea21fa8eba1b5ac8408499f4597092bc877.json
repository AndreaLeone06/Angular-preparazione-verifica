{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://world.openfoodfacts.org/cgi';\n  }\n  searchProducts(query) {\n    const url = `${this.apiUrl}/search.pl?search_terms=${query}&page_size=5&json=true`;\n    return this.http.get(url);\n  }\n  fetchProduct(id) {\n    const url = `${this.apiUrl}/v0/product/${id}`;\n    return this.http.get(url);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProductService","constructor","http","apiUrl","searchProducts","query","url","get","fetchProduct","id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/workspace/Angular-preparazione-verifica/openfoodfacts/src/app/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private apiUrl = 'https://world.openfoodfacts.org/cgi';\n\n  constructor(private http: HttpClient) {}\n\n  searchProducts(query: string) {\n    const url = `${this.apiUrl}/search.pl?search_terms=${query}&page_size=5&json=true`;\n    return this.http.get(url);\n  }\n\n  fetchProduct(id: string) {\n    const url = `${this.apiUrl}/v0/product/${id}`;\n    return this.http.get(url);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,qCAAqC;EAEf;EAEvCC,cAAcA,CAACC,KAAa;IAC1B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,2BAA2BE,KAAK,wBAAwB;IAClF,OAAO,IAAI,CAACH,IAAI,CAACK,GAAG,CAACD,GAAG,CAAC;EAC3B;EAEAE,YAAYA,CAACC,EAAU;IACrB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,eAAeM,EAAE,EAAE;IAC7C,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAACD,GAAG,CAAC;EAC3B;EAAC,QAAAI,CAAA,G;qBAbUV,cAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdf,cAAc;IAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}